{"ast":null,"code":"import { useEffect, useRef } from 'react';\n\nvar isPrimitive = function (val) {\n  return val !== Object(val);\n};\n\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!(deps instanceof Array) || !deps.length) {\n      console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n    }\n\n    if (deps.every(isPrimitive)) {\n      console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n    }\n\n    if (typeof depsEqual !== 'function') {\n      console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n    }\n  }\n\n  var ref = useRef(undefined);\n\n  if (!ref.current || !depsEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  useEffect(effect, ref.current);\n};\n\nexport default useCustomCompareEffect;","map":{"version":3,"names":["useEffect","useRef","isPrimitive","val","Object","useCustomCompareEffect","effect","deps","depsEqual","process","env","NODE_ENV","Array","length","console","warn","every","ref","undefined","current"],"sources":["/home/neo-j-thapa/Documents/React/costom_hook/node_modules/react-use/esm/useCustomCompareEffect.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AACA,IAAIC,WAAW,GAAG,UAAUC,GAAV,EAAe;EAAE,OAAOA,GAAG,KAAKC,MAAM,CAACD,GAAD,CAArB;AAA6B,CAAhE;;AACA,IAAIE,sBAAsB,GAAG,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;EAC5D,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACvC,IAAI,EAAEJ,IAAI,YAAYK,KAAlB,KAA4B,CAACL,IAAI,CAACM,MAAtC,EAA8C;MAC1CC,OAAO,CAACC,IAAR,CAAa,gGAAb;IACH;;IACD,IAAIR,IAAI,CAACS,KAAL,CAAWd,WAAX,CAAJ,EAA6B;MACzBY,OAAO,CAACC,IAAR,CAAa,2HAAb;IACH;;IACD,IAAI,OAAOP,SAAP,KAAqB,UAAzB,EAAqC;MACjCM,OAAO,CAACC,IAAR,CAAa,yFAAb;IACH;EACJ;;EACD,IAAIE,GAAG,GAAGhB,MAAM,CAACiB,SAAD,CAAhB;;EACA,IAAI,CAACD,GAAG,CAACE,OAAL,IAAgB,CAACX,SAAS,CAACD,IAAD,EAAOU,GAAG,CAACE,OAAX,CAA9B,EAAmD;IAC/CF,GAAG,CAACE,OAAJ,GAAcZ,IAAd;EACH;;EACDP,SAAS,CAACM,MAAD,EAASW,GAAG,CAACE,OAAb,CAAT;AACH,CAjBD;;AAkBA,eAAed,sBAAf"},"metadata":{},"sourceType":"module"}