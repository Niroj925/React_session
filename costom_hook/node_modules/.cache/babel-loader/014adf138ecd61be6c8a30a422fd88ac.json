{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.divWrapper = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar addClassDecoratorSupport_1 = tslib_1.__importDefault(require(\"./addClassDecoratorSupport\"));\n\nvar h = React.createElement;\n\nvar noWrap = function (Comp, propName, props, state) {\n  var _a;\n\n  return h(Comp, propName ? tslib_1.__assign((_a = {}, _a[propName] = state, _a), props) : tslib_1.__assign(tslib_1.__assign({}, state), props));\n};\n\nexports.divWrapper = function (Comp, propName, props, state) {\n  return h('div', null, noWrap(Comp, propName, props, state));\n};\n\nvar createEnhancer = function (Facc, prop, wrapper) {\n  if (wrapper === void 0) {\n    wrapper = noWrap;\n  }\n\n  var enhancer = function (Comp, propName, faccProps) {\n    if (propName === void 0) {\n      propName = prop;\n    }\n\n    if (faccProps === void 0) {\n      faccProps = null;\n    }\n\n    var isClassDecoratorMethodCall = typeof Comp === 'string';\n\n    if (isClassDecoratorMethodCall) {\n      return function (Klass) {\n        return enhancer(Klass, Comp || prop, propName);\n      };\n    }\n\n    var Enhanced = function (props) {\n      return h(Facc, faccProps, function (state) {\n        return wrapper(Comp, propName, props, state);\n      });\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      Enhanced.displayName = (Facc.displayName || Facc.name) + \"(\" + (Comp.displayName || Comp.name) + \")\";\n    }\n\n    return isClassDecoratorMethodCall ? addClassDecoratorSupport_1.default(Enhanced) : Enhanced;\n  };\n\n  return enhancer;\n};\n\nexports.default = createEnhancer;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,CAAC,GAAGC,KAAK,CAACC,aAAhB;;AAEA,IAAMC,MAAM,GAAG,UAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA6B;;;EAAK,QAAC,CAACH,IAAD,EAAOC,QAAQ,GAAEG,8BAC/DH,QAD+D,IACpDE,KADoD,EAC/CE,EAD+C,GAC1CH,KAD0C,CAAF,GAChCE,sCAC3BD,KAD2B,GACjBD,KADiB,CADiB,CAAD;AAGhD,CAHD;;AAKaI,qBAAa,UAACN,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA6B;EACrD,QAAC,CAAC,KAAD,EAAQ,IAAR,EAAcJ,MAAM,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,KAAxB,CAApB,CAAD;AAA2D,CADhD;;AAGb,IAAMI,cAAc,GAAG,UAACC,IAAD,EAAOC,IAAP,EAAsBC,OAAtB,EAAsC;EAAhB;IAAAA;EAAgB;;EACzD,IAAMC,QAAQ,GAAG,UAACX,IAAD,EAAOC,QAAP,EAA6BW,SAA7B,EAAqD;IAA9C;MAAAX;IAAoB;;IAAE;MAAAW;IAAwB;;IAClE,IAAMC,0BAA0B,GAAG,OAAOb,IAAP,KAAgB,QAAnD;;IAEA,IAAIa,0BAAJ,EAAgC;MAC5B,OAAO,UAACC,KAAD,EAAM;QAAK,eAAQ,CAACA,KAAD,EAAQd,IAAW,IAAIS,IAAvB,EAA6BR,QAA7B,CAAR;MAAqD,CAAvE;IACH;;IAED,IAAMc,QAAQ,GAAG,UAACb,KAAD,EAAM;MACnB,QAAC,CAACM,IAAD,EAAOI,SAAP,EAAkB,UAACT,KAAD,EAAM;QAAK,cAAO,CAACH,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,KAAxB,CAAP;MAAqC,CAAlE,CAAD;IAAoE,CADxE;;IAGA,IAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACtCH,QAAgB,CAACI,WAAjB,GAA+B,CAAGX,IAAI,CAACW,WAAL,IAAoBX,IAAI,CAACY,IAA5B,IAAgC,GAAhC,IAAoCpB,IAAI,CAACmB,WAAL,IAAoBnB,IAAI,CAACoB,IAA7D,IAAiE,GAAhG;IACJ;;IAED,OAAOP,0BAA0B,GAAGQ,mCAAyBN,QAAzB,CAAH,GAAwCA,QAAzE;EACH,CAfD;;EAiBA,OAAOJ,QAAP;AACH,CAnBD;;AAqBAL,kBAAeC,cAAf","names":["h","React","createElement","noWrap","Comp","propName","props","state","tslib_1","_a","exports","createEnhancer","Facc","prop","wrapper","enhancer","faccProps","isClassDecoratorMethodCall","Klass","Enhanced","process","env","NODE_ENV","displayName","name","addClassDecoratorSupport_1"],"sources":["/home/neo-j-thapa/Documents/React/costom_hook/node_modules/react-universal-interface/src/createEnhancer.ts"],"sourcesContent":["import * as React from 'react';\nimport addClassDecoratorSupport from './addClassDecoratorSupport';\n\nconst h = React.createElement;\n\nconst noWrap = (Comp, propName, props, state) => h(Comp, propName ?\n  {[propName]: state, ...props} :\n  {...state, ...props}\n);\n\nexport const divWrapper = (Comp, propName, props, state) =>\n  h('div', null, noWrap(Comp, propName, props, state)) as any;\n\nconst createEnhancer = (Facc, prop?: string, wrapper = noWrap) => {\n    const enhancer = (Comp, propName: any = prop, faccProps: object = null) => {\n        const isClassDecoratorMethodCall = typeof Comp === 'string';\n\n        if (isClassDecoratorMethodCall) {\n            return (Klass) => enhancer(Klass, Comp as any || prop, propName as any);\n        }\n\n        const Enhanced = (props) =>\n            h(Facc, faccProps, (state) => wrapper(Comp, propName, props, state));\n\n        if (process.env.NODE_ENV !== 'production') {\n            (Enhanced as any).displayName = `${Facc.displayName || Facc.name}(${Comp.displayName || Comp.name})`;\n        }\n\n        return isClassDecoratorMethodCall ? addClassDecoratorSupport(Enhanced) : Enhanced;\n    };\n\n    return enhancer;\n}\n\nexport default createEnhancer;\n"]},"metadata":{},"sourceType":"script"}