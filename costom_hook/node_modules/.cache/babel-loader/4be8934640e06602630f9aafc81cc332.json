{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useMemo, useRef } from 'react';\nimport useMountedState from './useMountedState';\nimport useUpdate from './useUpdate';\nimport useUpdateEffect from './useUpdateEffect';\nexport default function useStateList(stateSet) {\n  if (stateSet === void 0) {\n    stateSet = [];\n  }\n\n  var isMounted = useMountedState();\n  var update = useUpdate();\n  var index = useRef(0); // If new state list is shorter that before - switch to the last element\n\n  useUpdateEffect(function () {\n    if (stateSet.length <= index.current) {\n      index.current = stateSet.length - 1;\n      update();\n    }\n  }, [stateSet.length]);\n  var actions = useMemo(function () {\n    return {\n      next: function () {\n        return actions.setStateAt(index.current + 1);\n      },\n      prev: function () {\n        return actions.setStateAt(index.current - 1);\n      },\n      setStateAt: function (newIndex) {\n        // do nothing on unmounted component\n        if (!isMounted()) return; // do nothing on empty states list\n\n        if (!stateSet.length) return; // in case new index is equal current - do nothing\n\n        if (newIndex === index.current) return; // it gives the ability to travel through the left and right borders.\n        // 4ex: if list contains 5 elements, attempt to set index 9 will bring use to 5th element\n        // in case of negative index it will start counting from the right, so -17 will bring us to 4th element\n\n        index.current = newIndex >= 0 ? newIndex % stateSet.length : stateSet.length + newIndex % stateSet.length;\n        update();\n      },\n      setState: function (state) {\n        // do nothing on unmounted component\n        if (!isMounted()) return;\n        var newIndex = stateSet.length ? stateSet.indexOf(state) : -1;\n\n        if (newIndex === -1) {\n          throw new Error(\"State '\" + state + \"' is not a valid state (does not exist in state list)\");\n        }\n\n        index.current = newIndex;\n        update();\n      }\n    };\n  }, [stateSet]);\n  return __assign({\n    state: stateSet[index.current],\n    currentIndex: index.current\n  }, actions);\n}","map":{"version":3,"names":["__assign","useMemo","useRef","useMountedState","useUpdate","useUpdateEffect","useStateList","stateSet","isMounted","update","index","length","current","actions","next","setStateAt","prev","newIndex","setState","state","indexOf","Error","currentIndex"],"sources":["/home/neo-j-thapa/Documents/React/costom_hook/node_modules/react-use/esm/useStateList.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { useMemo, useRef } from 'react';\nimport useMountedState from './useMountedState';\nimport useUpdate from './useUpdate';\nimport useUpdateEffect from './useUpdateEffect';\nexport default function useStateList(stateSet) {\n    if (stateSet === void 0) { stateSet = []; }\n    var isMounted = useMountedState();\n    var update = useUpdate();\n    var index = useRef(0);\n    // If new state list is shorter that before - switch to the last element\n    useUpdateEffect(function () {\n        if (stateSet.length <= index.current) {\n            index.current = stateSet.length - 1;\n            update();\n        }\n    }, [stateSet.length]);\n    var actions = useMemo(function () { return ({\n        next: function () { return actions.setStateAt(index.current + 1); },\n        prev: function () { return actions.setStateAt(index.current - 1); },\n        setStateAt: function (newIndex) {\n            // do nothing on unmounted component\n            if (!isMounted())\n                return;\n            // do nothing on empty states list\n            if (!stateSet.length)\n                return;\n            // in case new index is equal current - do nothing\n            if (newIndex === index.current)\n                return;\n            // it gives the ability to travel through the left and right borders.\n            // 4ex: if list contains 5 elements, attempt to set index 9 will bring use to 5th element\n            // in case of negative index it will start counting from the right, so -17 will bring us to 4th element\n            index.current =\n                newIndex >= 0\n                    ? newIndex % stateSet.length\n                    : stateSet.length + (newIndex % stateSet.length);\n            update();\n        },\n        setState: function (state) {\n            // do nothing on unmounted component\n            if (!isMounted())\n                return;\n            var newIndex = stateSet.length ? stateSet.indexOf(state) : -1;\n            if (newIndex === -1) {\n                throw new Error(\"State '\" + state + \"' is not a valid state (does not exist in state list)\");\n            }\n            index.current = newIndex;\n            update();\n        },\n    }); }, [stateSet]);\n    return __assign({ state: stateSet[index.current], currentIndex: index.current }, actions);\n}\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,eAAe,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;EAC3C,IAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;IAAEA,QAAQ,GAAG,EAAX;EAAgB;;EAC3C,IAAIC,SAAS,GAAGL,eAAe,EAA/B;EACA,IAAIM,MAAM,GAAGL,SAAS,EAAtB;EACA,IAAIM,KAAK,GAAGR,MAAM,CAAC,CAAD,CAAlB,CAJ2C,CAK3C;;EACAG,eAAe,CAAC,YAAY;IACxB,IAAIE,QAAQ,CAACI,MAAT,IAAmBD,KAAK,CAACE,OAA7B,EAAsC;MAClCF,KAAK,CAACE,OAAN,GAAgBL,QAAQ,CAACI,MAAT,GAAkB,CAAlC;MACAF,MAAM;IACT;EACJ,CALc,EAKZ,CAACF,QAAQ,CAACI,MAAV,CALY,CAAf;EAMA,IAAIE,OAAO,GAAGZ,OAAO,CAAC,YAAY;IAAE,OAAQ;MACxCa,IAAI,EAAE,YAAY;QAAE,OAAOD,OAAO,CAACE,UAAR,CAAmBL,KAAK,CAACE,OAAN,GAAgB,CAAnC,CAAP;MAA+C,CAD3B;MAExCI,IAAI,EAAE,YAAY;QAAE,OAAOH,OAAO,CAACE,UAAR,CAAmBL,KAAK,CAACE,OAAN,GAAgB,CAAnC,CAAP;MAA+C,CAF3B;MAGxCG,UAAU,EAAE,UAAUE,QAAV,EAAoB;QAC5B;QACA,IAAI,CAACT,SAAS,EAAd,EACI,OAHwB,CAI5B;;QACA,IAAI,CAACD,QAAQ,CAACI,MAAd,EACI,OANwB,CAO5B;;QACA,IAAIM,QAAQ,KAAKP,KAAK,CAACE,OAAvB,EACI,OATwB,CAU5B;QACA;QACA;;QACAF,KAAK,CAACE,OAAN,GACIK,QAAQ,IAAI,CAAZ,GACMA,QAAQ,GAAGV,QAAQ,CAACI,MAD1B,GAEMJ,QAAQ,CAACI,MAAT,GAAmBM,QAAQ,GAAGV,QAAQ,CAACI,MAHjD;QAIAF,MAAM;MACT,CArBuC;MAsBxCS,QAAQ,EAAE,UAAUC,KAAV,EAAiB;QACvB;QACA,IAAI,CAACX,SAAS,EAAd,EACI;QACJ,IAAIS,QAAQ,GAAGV,QAAQ,CAACI,MAAT,GAAkBJ,QAAQ,CAACa,OAAT,CAAiBD,KAAjB,CAAlB,GAA4C,CAAC,CAA5D;;QACA,IAAIF,QAAQ,KAAK,CAAC,CAAlB,EAAqB;UACjB,MAAM,IAAII,KAAJ,CAAU,YAAYF,KAAZ,GAAoB,uDAA9B,CAAN;QACH;;QACDT,KAAK,CAACE,OAAN,GAAgBK,QAAhB;QACAR,MAAM;MACT;IAhCuC,CAAR;EAiC/B,CAjCgB,EAiCd,CAACF,QAAD,CAjCc,CAArB;EAkCA,OAAOP,QAAQ,CAAC;IAAEmB,KAAK,EAAEZ,QAAQ,CAACG,KAAK,CAACE,OAAP,CAAjB;IAAkCU,YAAY,EAAEZ,KAAK,CAACE;EAAtD,CAAD,EAAkEC,OAAlE,CAAf;AACH"},"metadata":{},"sourceType":"module"}