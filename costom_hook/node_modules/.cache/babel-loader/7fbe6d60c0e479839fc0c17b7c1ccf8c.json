{"ast":null,"code":"import { scrollbarWidth } from '@xobotyi/scrollbar-width';\nimport { useEffect, useState } from 'react';\nexport function useScrollbarWidth() {\n  var _a = useState(scrollbarWidth()),\n      sbw = _a[0],\n      setSbw = _a[1]; // this needed to ensure the scrollbar width in case hook called before the DOM is ready\n\n\n  useEffect(function () {\n    if (typeof sbw !== 'undefined') {\n      return;\n    }\n\n    var raf = requestAnimationFrame(function () {\n      setSbw(scrollbarWidth());\n    });\n    return function () {\n      return cancelAnimationFrame(raf);\n    };\n  }, []);\n  return sbw;\n}","map":{"version":3,"names":["scrollbarWidth","useEffect","useState","useScrollbarWidth","_a","sbw","setSbw","raf","requestAnimationFrame","cancelAnimationFrame"],"sources":["/home/neo-j-thapa/Documents/React/costom_hook/node_modules/react-use/esm/useScrollbarWidth.js"],"sourcesContent":["import { scrollbarWidth } from '@xobotyi/scrollbar-width';\nimport { useEffect, useState } from 'react';\nexport function useScrollbarWidth() {\n    var _a = useState(scrollbarWidth()), sbw = _a[0], setSbw = _a[1];\n    // this needed to ensure the scrollbar width in case hook called before the DOM is ready\n    useEffect(function () {\n        if (typeof sbw !== 'undefined') {\n            return;\n        }\n        var raf = requestAnimationFrame(function () {\n            setSbw(scrollbarWidth());\n        });\n        return function () { return cancelAnimationFrame(raf); };\n    }, []);\n    return sbw;\n}\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,0BAA/B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,SAASC,iBAAT,GAA6B;EAChC,IAAIC,EAAE,GAAGF,QAAQ,CAACF,cAAc,EAAf,CAAjB;EAAA,IAAqCK,GAAG,GAAGD,EAAE,CAAC,CAAD,CAA7C;EAAA,IAAkDE,MAAM,GAAGF,EAAE,CAAC,CAAD,CAA7D,CADgC,CAEhC;;;EACAH,SAAS,CAAC,YAAY;IAClB,IAAI,OAAOI,GAAP,KAAe,WAAnB,EAAgC;MAC5B;IACH;;IACD,IAAIE,GAAG,GAAGC,qBAAqB,CAAC,YAAY;MACxCF,MAAM,CAACN,cAAc,EAAf,CAAN;IACH,CAF8B,CAA/B;IAGA,OAAO,YAAY;MAAE,OAAOS,oBAAoB,CAACF,GAAD,CAA3B;IAAmC,CAAxD;EACH,CARQ,EAQN,EARM,CAAT;EASA,OAAOF,GAAP;AACH"},"metadata":{},"sourceType":"module"}