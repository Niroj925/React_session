{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isNavigator, off, on } from './misc/util';\nimport isDeepEqual from './misc/isDeepEqual';\nvar nav = isNavigator ? navigator : undefined;\nvar isBatteryApiSupported = nav && typeof nav.getBattery === 'function';\n\nfunction useBatteryMock() {\n  return {\n    isSupported: false\n  };\n}\n\nfunction useBattery() {\n  var _a = useState({\n    isSupported: true,\n    fetched: false\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    var isMounted = true;\n    var battery = null;\n\n    var handleChange = function () {\n      if (!isMounted || !battery) {\n        return;\n      }\n\n      var newState = {\n        isSupported: true,\n        fetched: true,\n        level: battery.level,\n        charging: battery.charging,\n        dischargingTime: battery.dischargingTime,\n        chargingTime: battery.chargingTime\n      };\n      !isDeepEqual(state, newState) && setState(newState);\n    };\n\n    nav.getBattery().then(function (bat) {\n      if (!isMounted) {\n        return;\n      }\n\n      battery = bat;\n      on(battery, 'chargingchange', handleChange);\n      on(battery, 'chargingtimechange', handleChange);\n      on(battery, 'dischargingtimechange', handleChange);\n      on(battery, 'levelchange', handleChange);\n      handleChange();\n    });\n    return function () {\n      isMounted = false;\n\n      if (battery) {\n        off(battery, 'chargingchange', handleChange);\n        off(battery, 'chargingtimechange', handleChange);\n        off(battery, 'dischargingtimechange', handleChange);\n        off(battery, 'levelchange', handleChange);\n      }\n    };\n  }, []);\n  return state;\n}\n\nexport default isBatteryApiSupported ? useBattery : useBatteryMock;","map":{"version":3,"names":["useEffect","useState","isNavigator","off","on","isDeepEqual","nav","navigator","undefined","isBatteryApiSupported","getBattery","useBatteryMock","isSupported","useBattery","_a","fetched","state","setState","isMounted","battery","handleChange","newState","level","charging","dischargingTime","chargingTime","then","bat"],"sources":["/home/neo-j-thapa/Documents/React/costom_hook/node_modules/react-use/esm/useBattery.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isNavigator, off, on } from './misc/util';\nimport isDeepEqual from './misc/isDeepEqual';\nvar nav = isNavigator ? navigator : undefined;\nvar isBatteryApiSupported = nav && typeof nav.getBattery === 'function';\nfunction useBatteryMock() {\n    return { isSupported: false };\n}\nfunction useBattery() {\n    var _a = useState({ isSupported: true, fetched: false }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var isMounted = true;\n        var battery = null;\n        var handleChange = function () {\n            if (!isMounted || !battery) {\n                return;\n            }\n            var newState = {\n                isSupported: true,\n                fetched: true,\n                level: battery.level,\n                charging: battery.charging,\n                dischargingTime: battery.dischargingTime,\n                chargingTime: battery.chargingTime,\n            };\n            !isDeepEqual(state, newState) && setState(newState);\n        };\n        nav.getBattery().then(function (bat) {\n            if (!isMounted) {\n                return;\n            }\n            battery = bat;\n            on(battery, 'chargingchange', handleChange);\n            on(battery, 'chargingtimechange', handleChange);\n            on(battery, 'dischargingtimechange', handleChange);\n            on(battery, 'levelchange', handleChange);\n            handleChange();\n        });\n        return function () {\n            isMounted = false;\n            if (battery) {\n                off(battery, 'chargingchange', handleChange);\n                off(battery, 'chargingtimechange', handleChange);\n                off(battery, 'dischargingtimechange', handleChange);\n                off(battery, 'levelchange', handleChange);\n            }\n        };\n    }, []);\n    return state;\n}\nexport default isBatteryApiSupported ? useBattery : useBatteryMock;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,EAA3B,QAAqC,aAArC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,IAAIC,GAAG,GAAGJ,WAAW,GAAGK,SAAH,GAAeC,SAApC;AACA,IAAIC,qBAAqB,GAAGH,GAAG,IAAI,OAAOA,GAAG,CAACI,UAAX,KAA0B,UAA7D;;AACA,SAASC,cAAT,GAA0B;EACtB,OAAO;IAAEC,WAAW,EAAE;EAAf,CAAP;AACH;;AACD,SAASC,UAAT,GAAsB;EAClB,IAAIC,EAAE,GAAGb,QAAQ,CAAC;IAAEW,WAAW,EAAE,IAAf;IAAqBG,OAAO,EAAE;EAA9B,CAAD,CAAjB;EAAA,IAA0DC,KAAK,GAAGF,EAAE,CAAC,CAAD,CAApE;EAAA,IAAyEG,QAAQ,GAAGH,EAAE,CAAC,CAAD,CAAtF;;EACAd,SAAS,CAAC,YAAY;IAClB,IAAIkB,SAAS,GAAG,IAAhB;IACA,IAAIC,OAAO,GAAG,IAAd;;IACA,IAAIC,YAAY,GAAG,YAAY;MAC3B,IAAI,CAACF,SAAD,IAAc,CAACC,OAAnB,EAA4B;QACxB;MACH;;MACD,IAAIE,QAAQ,GAAG;QACXT,WAAW,EAAE,IADF;QAEXG,OAAO,EAAE,IAFE;QAGXO,KAAK,EAAEH,OAAO,CAACG,KAHJ;QAIXC,QAAQ,EAAEJ,OAAO,CAACI,QAJP;QAKXC,eAAe,EAAEL,OAAO,CAACK,eALd;QAMXC,YAAY,EAAEN,OAAO,CAACM;MANX,CAAf;MAQA,CAACpB,WAAW,CAACW,KAAD,EAAQK,QAAR,CAAZ,IAAiCJ,QAAQ,CAACI,QAAD,CAAzC;IACH,CAbD;;IAcAf,GAAG,CAACI,UAAJ,GAAiBgB,IAAjB,CAAsB,UAAUC,GAAV,EAAe;MACjC,IAAI,CAACT,SAAL,EAAgB;QACZ;MACH;;MACDC,OAAO,GAAGQ,GAAV;MACAvB,EAAE,CAACe,OAAD,EAAU,gBAAV,EAA4BC,YAA5B,CAAF;MACAhB,EAAE,CAACe,OAAD,EAAU,oBAAV,EAAgCC,YAAhC,CAAF;MACAhB,EAAE,CAACe,OAAD,EAAU,uBAAV,EAAmCC,YAAnC,CAAF;MACAhB,EAAE,CAACe,OAAD,EAAU,aAAV,EAAyBC,YAAzB,CAAF;MACAA,YAAY;IACf,CAVD;IAWA,OAAO,YAAY;MACfF,SAAS,GAAG,KAAZ;;MACA,IAAIC,OAAJ,EAAa;QACThB,GAAG,CAACgB,OAAD,EAAU,gBAAV,EAA4BC,YAA5B,CAAH;QACAjB,GAAG,CAACgB,OAAD,EAAU,oBAAV,EAAgCC,YAAhC,CAAH;QACAjB,GAAG,CAACgB,OAAD,EAAU,uBAAV,EAAmCC,YAAnC,CAAH;QACAjB,GAAG,CAACgB,OAAD,EAAU,aAAV,EAAyBC,YAAzB,CAAH;MACH;IACJ,CARD;EASH,CArCQ,EAqCN,EArCM,CAAT;EAsCA,OAAOJ,KAAP;AACH;;AACD,eAAeP,qBAAqB,GAAGI,UAAH,GAAgBF,cAApD"},"metadata":{},"sourceType":"module"}