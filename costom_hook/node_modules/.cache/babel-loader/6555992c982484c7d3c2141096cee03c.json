{"ast":null,"code":"import { __assign } from \"tslib\";\nimport useList from './useList';\n/**\n * @deprecated Use `useList` hook's upsert action instead\n */\n\nexport default function useUpsert(predicate, initialList) {\n  if (initialList === void 0) {\n    initialList = [];\n  }\n\n  var _a = useList(initialList),\n      list = _a[0],\n      listActions = _a[1];\n\n  return [list, __assign(__assign({}, listActions), {\n    upsert: function (newItem) {\n      listActions.upsert(predicate, newItem);\n    }\n  })];\n}","map":{"version":3,"names":["__assign","useList","useUpsert","predicate","initialList","_a","list","listActions","upsert","newItem"],"sources":["/home/neo-j-thapa/Documents/React/costom_hook/node_modules/react-use/esm/useUpsert.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport useList from './useList';\n/**\n * @deprecated Use `useList` hook's upsert action instead\n */\nexport default function useUpsert(predicate, initialList) {\n    if (initialList === void 0) { initialList = []; }\n    var _a = useList(initialList), list = _a[0], listActions = _a[1];\n    return [\n        list,\n        __assign(__assign({}, listActions), { upsert: function (newItem) {\n                listActions.upsert(predicate, newItem);\n            } }),\n    ];\n}\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,WAA9B,EAA2C;EACtD,IAAIA,WAAW,KAAK,KAAK,CAAzB,EAA4B;IAAEA,WAAW,GAAG,EAAd;EAAmB;;EACjD,IAAIC,EAAE,GAAGJ,OAAO,CAACG,WAAD,CAAhB;EAAA,IAA+BE,IAAI,GAAGD,EAAE,CAAC,CAAD,CAAxC;EAAA,IAA6CE,WAAW,GAAGF,EAAE,CAAC,CAAD,CAA7D;;EACA,OAAO,CACHC,IADG,EAEHN,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKO,WAAL,CAAT,EAA4B;IAAEC,MAAM,EAAE,UAAUC,OAAV,EAAmB;MACzDF,WAAW,CAACC,MAAZ,CAAmBL,SAAnB,EAA8BM,OAA9B;IACH;EAF+B,CAA5B,CAFL,CAAP;AAMH"},"metadata":{},"sourceType":"module"}