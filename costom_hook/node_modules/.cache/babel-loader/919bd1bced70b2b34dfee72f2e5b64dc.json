{"ast":null,"code":"import { useEffect } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nimport useRafState from './useRafState';\n\nvar useWindowScroll = function () {\n  var _a = useRafState(function () {\n    return {\n      x: isBrowser ? window.pageXOffset : 0,\n      y: isBrowser ? window.pageYOffset : 0\n    };\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    var handler = function () {\n      setState(function (state) {\n        var pageXOffset = window.pageXOffset,\n            pageYOffset = window.pageYOffset; //Check state for change, return same state if no change happened to prevent rerender\n        //(see useState/setState documentation). useState/setState is used internally in useRafState/setState.\n\n        return state.x !== pageXOffset || state.y !== pageYOffset ? {\n          x: pageXOffset,\n          y: pageYOffset\n        } : state;\n      });\n    }; //We have to update window scroll at mount, before subscription.\n    //Window scroll may be changed between render and effect handler.\n\n\n    handler();\n    on(window, 'scroll', handler, {\n      capture: false,\n      passive: true\n    });\n    return function () {\n      off(window, 'scroll', handler);\n    };\n  }, []);\n  return state;\n};\n\nexport default useWindowScroll;","map":{"version":3,"names":["useEffect","isBrowser","off","on","useRafState","useWindowScroll","_a","x","window","pageXOffset","y","pageYOffset","state","setState","handler","capture","passive"],"sources":["/home/neo-j-thapa/Documents/React/costom_hook/node_modules/react-use/esm/useWindowScroll.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nimport useRafState from './useRafState';\nvar useWindowScroll = function () {\n    var _a = useRafState(function () { return ({\n        x: isBrowser ? window.pageXOffset : 0,\n        y: isBrowser ? window.pageYOffset : 0,\n    }); }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var handler = function () {\n            setState(function (state) {\n                var pageXOffset = window.pageXOffset, pageYOffset = window.pageYOffset;\n                //Check state for change, return same state if no change happened to prevent rerender\n                //(see useState/setState documentation). useState/setState is used internally in useRafState/setState.\n                return state.x !== pageXOffset || state.y !== pageYOffset\n                    ? {\n                        x: pageXOffset,\n                        y: pageYOffset,\n                    }\n                    : state;\n            });\n        };\n        //We have to update window scroll at mount, before subscription.\n        //Window scroll may be changed between render and effect handler.\n        handler();\n        on(window, 'scroll', handler, {\n            capture: false,\n            passive: true,\n        });\n        return function () {\n            off(window, 'scroll', handler);\n        };\n    }, []);\n    return state;\n};\nexport default useWindowScroll;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,EAAzB,QAAmC,aAAnC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,IAAIC,eAAe,GAAG,YAAY;EAC9B,IAAIC,EAAE,GAAGF,WAAW,CAAC,YAAY;IAAE,OAAQ;MACvCG,CAAC,EAAEN,SAAS,GAAGO,MAAM,CAACC,WAAV,GAAwB,CADG;MAEvCC,CAAC,EAAET,SAAS,GAAGO,MAAM,CAACG,WAAV,GAAwB;IAFG,CAAR;EAG9B,CAHe,CAApB;EAAA,IAGQC,KAAK,GAAGN,EAAE,CAAC,CAAD,CAHlB;EAAA,IAGuBO,QAAQ,GAAGP,EAAE,CAAC,CAAD,CAHpC;;EAIAN,SAAS,CAAC,YAAY;IAClB,IAAIc,OAAO,GAAG,YAAY;MACtBD,QAAQ,CAAC,UAAUD,KAAV,EAAiB;QACtB,IAAIH,WAAW,GAAGD,MAAM,CAACC,WAAzB;QAAA,IAAsCE,WAAW,GAAGH,MAAM,CAACG,WAA3D,CADsB,CAEtB;QACA;;QACA,OAAOC,KAAK,CAACL,CAAN,KAAYE,WAAZ,IAA2BG,KAAK,CAACF,CAAN,KAAYC,WAAvC,GACD;UACEJ,CAAC,EAAEE,WADL;UAEEC,CAAC,EAAEC;QAFL,CADC,GAKDC,KALN;MAMH,CAVO,CAAR;IAWH,CAZD,CADkB,CAclB;IACA;;;IACAE,OAAO;IACPX,EAAE,CAACK,MAAD,EAAS,QAAT,EAAmBM,OAAnB,EAA4B;MAC1BC,OAAO,EAAE,KADiB;MAE1BC,OAAO,EAAE;IAFiB,CAA5B,CAAF;IAIA,OAAO,YAAY;MACfd,GAAG,CAACM,MAAD,EAAS,QAAT,EAAmBM,OAAnB,CAAH;IACH,CAFD;EAGH,CAxBQ,EAwBN,EAxBM,CAAT;EAyBA,OAAOF,KAAP;AACH,CA/BD;;AAgCA,eAAeP,eAAf"},"metadata":{},"sourceType":"module"}